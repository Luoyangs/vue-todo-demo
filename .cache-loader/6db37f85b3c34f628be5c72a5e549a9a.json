{"remainingRequest":"/Users/luosirs/Documents/project/vue-todo-demo/node_modules/webpack/buildin/global.js","dependencies":[{"path":"/Users/luosirs/Documents/project/vue-todo-demo/node_modules/webpack/buildin/global.js","mtime":499162500000},{"path":"/Users/luosirs/Documents/project/vue-todo-demo/node_modules/babel-loader/lib/index.js","mtime":1530808242000},{"path":"/Users/luosirs/Documents/project/vue-todo-demo/node_modules/cache-loader/dist/cjs.js","mtime":1534405914736}],"contextDependencies":[],"result":["var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"]}